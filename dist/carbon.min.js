/**
 * carbon - Carbon: A lightweight dependenciy injection library based on bottlejs and angularjs, but without features that are not always used
 * @version v0.0.1
 */
!function(e){"use strict";function t(){return{_providers:{},_get:function(e){return this._providers[e]||void 0},_set:function(e,t){return this._providers[e]=t},_find:function(e,t,n){for(var i in this._providers)if(0===i.indexOf(e))return t?["Service"==i.split(e)[1]?this._providers[i]:n!==!1?new this._providers[i]:this._providers[i],i]:"Service"==i.split(e)[1]?this._providers[i]:n!==!1?new this._providers[i]:this._providers[i]},_mapDependencies:function(e){return this._find(e)},_getDependencies:function(e){var t=[],n=[];for(var i in e)"string"==typeof e[i]?t.push(e[i]):n.push(e[i]);return t=t.map(this._mapDependencies,this).concat(n)},factory:function(e,t){var i,r,s=e+"Factory",o=arguments.length>2?n.call(arguments,2,arguments.length):null;return void 0!==(i=this._get(s))&&1===arguments.length?(r=i,new r):(t=o?t.bind.apply(t,[void 0].concat(this._getDependencies(o))):t,this._set(s,t),r=this._get(s),new r)},service:function(e,t){var i,r=e+"Service",s=arguments.length>2?n.call(arguments,2,arguments.length):null;return void 0!==(i=this._get(r))&&1===arguments.length?i:(t=s?t.bind.apply(t,[void 0].concat(this._getDependencies(s))):t,t=new t,this._set(r,t))}}}var n=Array.prototype.slice,i={_modules:{},map_dependencies:function(e,t){var n,r;for(var s in t)if("string"==typeof t[s]){if(void 0!==t.indexOf&&-1!==t[s].indexOf(".")&&(n=t[s].split(".")[0],r=t[s].split(".")[1],i._get(n)&&i._get(n)._find(r))){var o=i._get(n)._find(r,!0,!1);void 0!==e._set?e._set(n+"."+o[1],o[0]):e.push(o[0])}}else e._set?e._set(s,t[s]):e.push(t[s])},_get:function(e){return this._modules[e]||void 0},_set:function(e,t){return this._modules[e]=t},module:function(e){var i,r=arguments.length>1?n.call(arguments,1):null;if(this._get(e))return this._get(e);i=new t;var s=Object.create(i);return s._name=e,r&&this.map_dependencies(s,r),s=this._set(e,s)},wrap:function(e){var t=arguments.length>1?Array.prototype.slice.call(arguments,1):null,n=[void 0];return t&&(this.map_dependencies(n,t),e=e.bind.apply(e,n)),e}};e.carbon=i}(this);
//# sourceMappingURL=carbon.min.js.map