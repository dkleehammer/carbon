/**
 * carbon - Carbon: A lightweight dependenciy injection library based on bottlejs and angularjs, but without features that are not always used
 * @version v0.0.1
 */
!function(e){"use strict";function r(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t]);return e}var t=Array.prototype.slice,i={_providers:{},_getProvider:function(e,r){for(var t in this._providers)if(0===t.indexOf(e))return r?[this._providers[t],t]:this._providers[t]},_setProvider:function(e,r){this._providers[e]=r},_mapDependencies:function(e){return this._getProvider(e)},factory:function(e,r){var i,n=e+"Factory",o=arguments.length>2?t.call(arguments,1,arguments.length):null;if(this._getProvider(e))return i=this._getProvider(e),new i;if(o){var s=[],u=[];for(var a in o)"string"==typeof o[a]?s.push(o[a]):u.push(o[a]);s=u.concat(s.map(this._mapDependencies,this)),r=r.bind.apply(r,s)}return this._setProvider(n,r),i=this._getProvider(e),new i},service:function(e,i){var n,o=e+"Service",s=arguments.length>2?t.call(arguments,1,arguments.length):null,u=[],a=[];if(this._getProvider(e))return this._getProvider(e);if("object"==typeof i&&(n=i,i=arguments[2]),s){for(var l in s)"string"==typeof s[l]?u.push(s[l]):a.push(s[l]);u=a.concat(u.map(this._mapDependencies,this)),i=i.bind.apply(i,u)}return i=new i,n&&(i=r(i,n)),this._setProvider(o,i),this._getProvider(e)}},n={_modules:{},_getModule:function(e){return this._modules[e]||void 0},_setModule:function(e,r){this._modules[e]=r},_importFromModule:function(e){if(void 0!==e.indexOf&&-1!==e.indexOf(".")){var r=e.split(".")[0],t=e.split(".")[1];if(n._modules[r])return n._getModule(r)._getProvider(t)||null}},_createModule:function(){return Object.create(i)},module:function(e){var r,i=arguments.length>1?t.call(arguments,1):null;if(this._getModule(e))return this._getModule(e);if(r=this._createModule(),i)for(var o in i){var s=n._importFromModule(i[o]);s&&r._setProvider(s[1],s[0])}return this._setModule(e,r),r},wrap:function(e){var r=arguments.length>1?Array.prototype.slice.call(arguments,1):null,t=[void 0];if(!r)return e;if(r)for(var i in r){var o=n._importFromModule(r[i]);o&&t.push(o)}return e.bind.apply(e,t)}};e.carbon=n}(this);
//# sourceMappingURL=carbon.min.js.map