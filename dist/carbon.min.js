/**
 * carbon - Carbon: A lightweight dependenciy injection library based on bottlejs and angularjs, but without features that are not always used
 * @version v0.0.1
 */
!function(e){"use strict";function r(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t]);return e}function t(){return{_providers:{},_get:function(e){return console.log(e),this._providers[e]||void 0},_set:function(e,r){return this._providers[e]=r},_find:function(e,r){for(var t in this._providers)if(0===t.indexOf(e))return r?["Service"==t.split(e)[1]?this._providers[t]:new this._providers[t],t]:"Service"==t.split(e)[1]?this._providers[t]:new this._providers[t]},_mapDependencies:function(e){return this._find(e)},_getDependencies:function(e){var r=[],t=[];for(var n in e)"string"==typeof e[n]?r.push(e[n]):t.push(e[n]);return r=r.map(this._mapDependencies,this).concat(t)},factory:function(e,r){var t,i,s=e+"Factory",o=arguments.length>2?n.call(arguments,2,arguments.length):null;if(void 0!==(t=this._get(s))){if(1===arguments.length)return console.log(t),i=t,new i;throw new Error("ProviderError: Factory provider "+e+" already exists in module")}return r=o?r.bind.apply(r,[void 0].concat(this._getDependencies(o))):r,this._set(s,r),i=this._get(s),new i},service:function(e,t){var i,s,o=e+"Service",u=arguments.length>2?n.call(arguments,2,arguments.length):null;if(void 0!==(s=this._get(o))){if(1===arguments.length)return s;throw new Error("ProviderError: Service provider "+e+" already exists in module")}return t=u?t.bind.apply(t,[void 0].concat(this._getDependencies(u))):t,t=new t,t=i?r(t,i):t,this._set(o,t)}}}var n=Array.prototype.slice,i={_modules:{},map_dependencies:function(e,r){var t,n;for(var s in r)if(void 0!==r.indexOf&&-1!==r[s].indexOf(".")&&(t=r[s].split(".")[0],n=r[s].split(".")[1],i._get(t)&&i._get(t)._find(n))){var o=i._get(t)._find(n,!0);void 0!==e._set?e._set(t+"."+o[1],o[0]):e[t+"."+o[1]]=o[0]}},_get:function(e){return this._modules[e]||void 0},_set:function(e,r){return this._modules[e]=r},module:function(e){var r,i=arguments.length>1?n.call(arguments,1):null;if(this._get(e))return this._get(e);r=new t;var s=Object.create(r);return s._name=e,i&&this.map_dependencies(s,i),s=this._set(e,s)},wrap:function(e){var r=arguments.length>1?Array.prototype.slice.call(arguments,1):null,t=[void 0];return r?(this.map_dependencies(t,r),e.bind.apply(e,t)):e}};e.carbon=i}(this);
//# sourceMappingURL=carbon.min.js.map