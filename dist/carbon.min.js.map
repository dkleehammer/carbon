{"version":3,"sources":["carbon.js"],"names":[],"mappings":"CACA,SAAA,GACA,YAEA,IAAA,GAAA,SAAA,EAAA,GACA,GAEA,GACA,EAHA,EAAA,KACA,EAAA,UAAA,OAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,IAIA,OAAA,GAAA,UAAA,IACA,EAAA,EAAA,UAAA,GACA,EAAA,GAAA,KAIA,IACA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,IAAA,EAAA,aAAA,KAGA,EAAA,UAAA,GAAA,EAEA,EAAA,EAAA,UAAA,GACA,EAAA,GAAA,KAIA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,IAKA,IAAA,EAAA,SAAA,IAAA,IAAA,UAAA,OACA,MAAA,GAAA,SAAA,EAwBA,IAlBA,gBAAA,KACA,EAAA,EACA,EAAA,UAAA,IAOA,EADA,EACA,UAAA,OAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,KAEA,UAAA,OAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,KAGA,IACA,EAAA,EAAA,KAAA,MAAA,EAAA,EAAA,IAAA,EAAA,aAAA,KAGA,EAAA,CACA,GAAA,GAAA,GAAA,EACA,KAAA,GAAA,KAAA,GACA,EAAA,GAAA,EAAA,EAGA,GAAA,SAAA,GAAA,MAEA,GAAA,SAAA,GAAA,GAAA,EAGA,OAAA,GAAA,SAAA,IAGA,GACA,aACA,kBAAA,SAAA,GACA,GAAA,SAAA,EAAA,SAAA,KAAA,EAAA,QAAA,KAAA,CAIA,GAAA,GAAA,EAAA,MAAA,KAAA,GAAA,EAAA,EAAA,MAAA,KAAA,EAEA,IAAA,EAAA,UAAA,GAIA,MAAA,GAAA,UAAA,GAAA,UAAA,IACA,EAAA,UAAA,GAAA,UAAA,GAAA,WAGA,EAAA,UAAA,GAAA,SAAA,IACA,EAAA,UAAA,GAAA,SAAA,GAAA,WADA,SAIA,OAAA,SAAA,GACA,GAAA,GAAA,KACA,EAAA,UAAA,OAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,IAEA,IAAA,EAAA,UAAA,GACA,MAAA,GAAA,UAAA,EAGA,IAAA,GAAA,OAAA,OAAA,KAcA,IAbA,EAAA,aACA,EAAA,YACA,EAAA,QAAA,EACA,EAAA,QAAA,EACA,EAAA,aAAA,SAAA,GACA,MAAA,MAAA,UAAA,GACA,GAAA,MAAA,UAAA,GAEA,KAAA,SAAA,IAKA,EACA,IAAA,GAAA,KAAA,GAAA,CACA,GAAA,GAAA,EAAA,kBAAA,EAAA,GAEA,KAAA,EACA,MAGA,aAAA,EAAA,GACA,EAAA,SAAA,EAAA,IAAA,EAAA,GAEA,EAAA,UAAA,EAAA,IAAA,EAAA,GAMA,MADA,GAAA,UAAA,GAAA,EACA,EAAA,UAAA,IAGA,KAAA,SAAA,GACA,GAAA,GAAA,UAAA,OAAA,EAAA,MAAA,UAAA,MAAA,KAAA,UAAA,GAAA,KACA,GAAA,OAGA,KAAA,EACA,MAAA,EAIA,IAAA,EACA,IAAA,GAAA,KAAA,GAAA,CACA,GAAA,GAAA,EAAA,kBAAA,EAAA,GACA,GAAA,KAAA,EAAA,IAKA,MAAA,GAAA,KAAA,MAAA,EAAA,IAIA,GAAA,OAAA,GACA","file":"carbon.min.js","sourcesContent":["\n(function(exports) {\n    \"use strict\";\n\n    var factory = function(name, Factory) {\n        var _this = this,\n            deps = arguments.length > 2 ? Array.prototype.slice.call(arguments, 1) : null,\n            Service,\n            f;\n\n        if (_this.factories[name]) {\n            Service = _this.factories[name];\n            f = new Service();\n            return f;\n        }\n\n        if (deps) {\n            Factory = Factory.bind.apply(Factory, deps.map(_this.mapContainer, _this));\n        }        \n\n        _this.factories[name] = Factory;\n\n        Service = _this.factories[name];\n        f = new Service();\n        return f;\n    };\n\n    var service = function(name, Service) {\n        var _this = this, extend, deps;\n\n        // ----------------------------------------\n        // if the service exists and no additional paramters, return it\n        // ----------------------------------------\n        if (_this.services[name] && arguments.length === 1) {\n            return _this.services[name];\n        }\n\n        // ----------------------------------------\n        // creating/replace an existing service\n        // ----------------------------------------\n        if (typeof Service === 'object') {\n            extend = Service;\n            Service = arguments[2];\n        }\n\n        // ----------------------------------------\n        // if the service exists and no additional paramters, return it\n        // ----------------------------------------\n        if (extend) {\n            deps = arguments.length > 2 ? Array.prototype.slice.call(arguments, 3) : null\n        } else {\n            deps = arguments.length > 2 ? Array.prototype.slice.call(arguments, 1) : null;\n        }\n\n        if (deps) {\n            Service = Service.bind.apply(Service, deps.map(_this.mapContainer, _this));\n        }\n\n        if (extend) {\n            var s = new Service();\n            for (var attrname in s) {\n                extend[attrname] = s[attrname];\n            }\n\n            _this.services[name] = extend;\n        } else {\n            _this.services[name] = new Service();\n        }\n\n        return _this.services[name];\n    };\n\n    var carbon = {\n        instances: {},\n        _importFromModule: function(dep) {\n            if (undefined === dep.indexOf || dep.indexOf('.') === -1) {\n                return;\n            }\n\n            var mod = dep.split('.')[0], provider = dep.split('.')[1];\n\n            if (!carbon.instances[mod]) {\n                return;\n            }\n\n            if (carbon.instances[mod].factories[provider]) {\n                return [carbon.instances[mod].factories[provider], 'factory'];\n            }\n\n            if (carbon.instances[mod].services[provider]) {\n                return [carbon.instances[mod].services[provider], 'service'];\n            }\n        },\n        module: function(name) {\n            var _this = this,\n                deps = arguments.length > 1 ? Array.prototype.slice.call(arguments, 1) : null;\n\n            if (_this.instances[name]) {\n                return _this.instances[name];\n            }\n\n            var instance = Object.create(null);\n            instance.factories = {};\n            instance.services = {};\n            instance.factory = factory;\n            instance.service = service;\n            instance.mapContainer = function mapContainer(key) {\n                if (this.factories[key]) {\n                    return new this.factories[key]();\n                } else {\n                    return this.services[key];\n                }\n            };\n\n            // if we have dependencies, load the other modules dependencies into our \n            if (deps) {\n                for (var i in deps) {\n                    var d = carbon._importFromModule(deps[i]);\n\n                    if (!d) {\n                        return;\n                    }\n\n                    if (d[1] === 'service') {\n                        instance.services[deps[i]] = d[0];\n                    } else {\n                        instance.factories[deps[i]] = d[0];\n                    }\n                }\n            }\n\n            _this.instances[name] = instance;\n            return _this.instances[name];\n\n        },\n        wrap: function(fn) {\n            var deps = arguments.length > 1 ? Array.prototype.slice.call(arguments, 1) : null,\n                container = [undefined]; // first item has to be undefined for some reason\n\n            // if no depenendencies, we don't need to be here.\n            if (!deps) {\n                return fn;\n            }\n\n            // loop through dependencies, map to their modules, and retrieve them from it's providers\n            if (deps) {\n                for (var i in deps) {\n                    var d = carbon._importFromModule(deps[i]);\n                    container.push(d[0]);\n                }\n            }\n\n            // wrap a function to enable di of module dependencies.\n            return fn.bind.apply(fn, container);\n        }\n    };\n\n    exports.carbon = carbon;\n})(this);\n"],"sourceRoot":"/source/"}